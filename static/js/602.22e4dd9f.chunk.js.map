{"version":3,"file":"static/js/602.22e4dd9f.chunk.js","mappings":"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","sources":["pages/Profile.js"],"sourcesContent":["import \"../css/Profile.css\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profilePicture, setProfilePicture] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login'); // Redirect to login if no token is found\n          return;\n        }\n\n        const response = await axios.get('/api/auth/user', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setUser(response.data);\n        setName(response.data.name);\n        setEmail(response.data.email);\n        setProfilePicture(response.data.profilePicture);\n        setLoading(false);\n      } catch (err) {\n        setError(err.response?.data?.message || 'Something went wrong');\n        setLoading(false);\n        navigate('/login'); // Redirect to login if token is invalid\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  const handleUpdateProfile = async (e) => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(\n        '/api/auth/update-profile',\n        { name, email, profilePicture },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setUser(response.data);\n      setIsEditing(false);\n      setError('');\n    } catch (err) {\n      setError(err.response?.data?.message || 'Something went wrong');\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePicture(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h2>Profile</h2>\n      <div className=\"profile-picture\">\n        <img\n          src={profilePicture || 'https://via.placeholder.com/150'}\n          alt=\"Profile\"\n        />\n        {isEditing && (\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        )}\n      </div>\n      {isEditing ? (\n        <form onSubmit={handleUpdateProfile}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\">Save Changes</button>\n          <button type=\"button\" onClick={() => setIsEditing(false)}>\n            Cancel\n          </button>\n        </form>\n      ) : (\n        <div className=\"profile-info\">\n          <p>\n            <strong>Name:</strong> {user?.name}\n          </p>\n          <p>\n            <strong>Email:</strong> {user?.email}\n          </p>\n          <button onClick={() => setIsEditing(true)}>Edit Profile</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["Profile","user","setUser","useState","loading","setLoading","error","setError","name","setName","email","setEmail","profilePicture","setProfilePicture","isEditing","setIsEditing","navigate","useNavigate","useEffect","async","token","localStorage","getItem","response","axios","get","headers","Authorization","concat","data","err","_err$response","_err$response$data","message","fetchUserData","_jsx","children","className","_jsxs","src","alt","type","accept","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","onSubmit","preventDefault","put","_err$response2","_err$response2$data","htmlFor","value","onClick"],"sourceRoot":""}