{"version":3,"file":"static/js/998.8b07c478.chunk.js","mappings":"qLAaA,MAiFA,EAjFuBA,KAErB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CAAC,IAC/BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAG7BO,GAAWC,EAAAA,EAAAA,MA8CjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACHR,IAAWS,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAAER,IAAe,IAC5DE,IAASO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAEN,IAAa,KACvDI,EAAAA,EAAAA,MAAA,QAAMI,SA9BWC,UAInB,GAHAC,EAAEC,iBAnBiBC,MACnB,MAAMC,EAAY,CAAC,EAanB,OAVKpB,EAEO,eAAeqB,KAAKrB,KAC9BoB,EAAUpB,MAAQ,yBAFlBoB,EAAUpB,MAAQ,oBAMpBI,EAAUgB,GAG+B,IAAlCE,OAAOC,KAAKH,GAAWI,MAAY,EAQrCL,GAEL,IAEE,MAAMM,QAAiBC,EAAAA,EAAMC,KAAK,4BAA6B,CAAE3B,UAGjEM,EAAWmB,EAASG,KAAKvB,SAGzBG,EAAS,IAGTC,EAAS,SACX,CAAE,MAAOoB,GAAM,IAADC,EAAAC,EAEZvB,GAAqB,QAAZsB,EAAAD,EAAIJ,gBAAQ,IAAAK,GAAM,QAANC,EAAZD,EAAcF,YAAI,IAAAG,OAAN,EAAZA,EAAoB1B,UAAW,uBAC1C,GAS+BQ,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,QAAOnB,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACEmB,KAAK,QACLC,KAAK,QACLC,MAAOnC,EACPoC,SAAWnB,GAAMhB,EAASgB,EAAEoB,OAAOF,OACnCG,YAAY,qBAEbnC,EAAOH,QAASc,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAEV,EAAOH,QAAa,QAE/Dc,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQpB,SAAC,WAAe,QAEvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,4BACRC,EAAAA,EAAAA,KAAA,KAAGyB,KAAK,SAAQ1B,SAAC,eAAc,SAErD,C","sources":["pages/ForgotPassword.js"],"sourcesContent":["// Importing necessary CSS file for styling\nimport \"../css/ForgotPassword.css\";\n\n// Importing React and necessary hooks from 'react'\nimport React, { useState } from 'react';\n\n// Importing axios for making HTTP requests\nimport axios from 'axios';\n\n// Importing hook from 'react-router-dom' for navigation\nimport { useNavigate } from 'react-router-dom';\n\n// Defining the ForgotPassword component\nconst ForgotPassword = () => {\n  // State hooks for managing form inputs and messages\n  const [email, setEmail] = useState(''); // State for email input\n  const [errors, setErrors] = useState({}); // State for form validation errors\n  const [message, setMessage] = useState(''); // State for success message\n  const [error, setError] = useState(''); // State for error message\n\n  // Hook for navigation\n  const navigate = useNavigate();\n\n  // Function to validate the form inputs\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Check if email is provided and is valid\n    if (!email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Invalid email address';\n    }\n\n    // Update the errors state\n    setErrors(newErrors);\n\n    // Return true if no errors, false otherwise\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Validate the form inputs\n    if (!validateForm()) return; // Stop if validation fails\n\n    try {\n      // Make a POST request to request a password reset\n      const response = await axios.post('/api/auth/forgot-password', { email });\n\n      // Update the success message state\n      setMessage(response.data.message);\n\n      // Clear any error message\n      setError('');\n\n      // Redirect to login page after successful request\n      navigate('/login');\n    } catch (err) {\n      // Update the error message state\n      setError(err.response?.data?.message || 'Something went wrong');\n    }\n  };\n\n  // JSX to render the forgot password form\n  return (\n    <div className=\"forgot-password-container\">\n      <h2>Forgot Password</h2>\n      {message && <div className=\"success-message\">{message}</div>} {/* Display success message if present */}\n      {error && <div className=\"error-message\">{error}</div>} {/* Display error message if present */}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)} // Update email state on input change\n            placeholder=\"Enter your email\"\n          />\n          {errors.email && <div className=\"error\">{errors.email}</div>} {/* Display email error if present */}\n        </div>\n        <button type=\"submit\">Submit</button> {/* Submit button */}\n      </form>\n      <div className=\"text-center mt-3\">\n        Remember your password? <a href=\"/login\">Login here</a> {/* Link to login page */}\n      </div>\n    </div>\n  );\n};\n\n// Exporting the ForgotPassword component as default\nexport default ForgotPassword;"],"names":["ForgotPassword","email","setEmail","useState","errors","setErrors","message","setMessage","error","setError","navigate","useNavigate","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","validateForm","newErrors","test","Object","keys","length","response","axios","post","data","err","_err$response","_err$response$data","htmlFor","type","name","value","onChange","target","placeholder","href"],"sourceRoot":""}